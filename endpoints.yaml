openapi: 3.0.3
info:
  title: "Project API Documentation"
  description: "This document describes the APIs for managing student projects, instructor tasks, TA duties, authentication, and generative AI integrations."
  version: "1.0.0"
servers:
  - url: "https://api.example.com/v1"
    description: "Production server"
  
paths:
  /api/projects/status/{student_id}:
    get:
      summary: "Get project status for a specific student"
      description: "This endpoint helps students track their project status, including milestone deadlines and completion status."
      parameters:
        - name: "student_id"
          in: "path"
          required: true
          schema:
            type: "integer"
          description: "ID of the student"
      responses:
        '200':
          description: "Project status retrieved successfully"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  student_id:
                    type: "integer"
                  project_status:
                    type: "string"
                    description: "Current status of the student's project"
        '400':
          description: "Bad Request"

  /link_github_repo:
    post:
      summary: "Link a student's GitHub repository"
      description: "Allows students to link their active GitHub repository to the system."
      responses:
        '201':
          description: "GitHub repository linked successfully"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  github_url:
                    type: "string"
                    description: "The linked GitHub repository URL"
        '400':
          description: "Bad Request"

  /update_github_repo:
    put:
      summary: "Update student's GitHub repository link"
      description: "Allows students to update their GitHub repository link if needed."
      responses:
        '200':
          description: "GitHub repository updated successfully"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  github_url:
                    type: "string"
                    description: "Updated GitHub repository URL"
        '400':
          description: "Bad Request"

  /get_github_repo:
    get:
      summary: "Get the student's linked GitHub repository"
      description: "Allows students to view their currently linked GitHub repository."
      responses:
        '200':
          description: "GitHub repository fetched successfully"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  github_url:
                    type: "string"
                    description: "The currently linked GitHub repository URL"
        '404':
          description: "Repository not found"

  /api/mentorship_sessions/register:
    post:
      summary: "Register for mentorship sessions"
      description: "Students can register for industry mentorship sessions."
      responses:
        '201':
          description: "Mentorship session registered successfully"
        '400':
          description: "Bad Request"
  
  /create_milestone:
    post:
      summary: "Create project milestones"
      description: "Instructors can create new project milestones with deadlines."
      responses:
        '201':
          description: "Milestone created successfully"
        '400':
          description: "Bad Request"

  /milestones:
    get:
      summary: "Retrieve all milestones"
      description: "Instructors can view all the existing milestones."
      responses:
        '200':
          description: "List of milestones"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    milestone_id:
                      type: "integer"
                    milestone_name:
                      type: "string"
        '404':
          description: "No milestones found"

  /api/milestones/comments:
    post:
      summary: "Add comments/feedback on milestones"
      description: "Instructors can provide feedback to students on their milestones."
      responses:
        '201':
          description: "Feedback added successfully"
        '400':
          description: "Bad Request"

  /update_milestone/{milestone_id}:
    put:
      summary: "Update existing milestone"
      description: "Instructors can update an existing milestone's details."
      parameters:
        - name: "milestone_id"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        '200':
          description: "Milestone updated successfully"
        '400':
          description: "Bad Request"

  /api/doubts:
    get:
      summary: "View all student doubts"
      description: "TAs can retrieve a list of all doubts raised by students."
      responses:
        '200':
          description: "List of student doubts"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    doubt_id:
                      type: "integer"
                    doubt_description:
                      type: "string"
        '404':
          description: "No doubts found"

  /api/viva_slots:
    post:
      summary: "Create a viva exam slot"
      description: "TAs can create viva exam slots for students."
      responses:
        '201':
          description: "Viva slot created successfully"
        '400':
          description: "Bad Request"

  /api/viva_slots/{slot_id}:
    put:
      summary: "Update viva exam slot"
      description: "TAs can update viva slots with new times or examiner details."
      parameters:
        - name: "slot_id"
          in: "path"
          required: true
          schema:
            type: "integer"
      responses:
        '200':
          description: "Viva slot updated successfully"
        '400':
          description: "Bad Request"

  /api/register:
    post:
      summary: "Register a new user"
      description: "This endpoint registers a new user (student, instructor, or TA) and generates an access token."
      responses:
        '201':
          description: "User registered successfully"
        '400':
          description: "Bad Request"

  /api/login:
    post:
      summary: "User login"
      description: "Allows users to log in and receive an access token."
      responses:
        '200':
          description: "Login successful"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  access_token:
                    type: "string"
        '400':
          description: "Bad Request"

  /api/logout:
    post:
      summary: "User logout"
      description: "Logs the user out by invalidating the JWT token."
      responses:
        '200':
          description: "Logout successful"

  /api/ai/feedback:
    post:
      summary: "Get AI feedback on student projects"
      description: "Students can get feedback from AI on their project submissions."
      responses:
        '200':
          description: "AI feedback generated successfully"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  feedback:
                    type: "string"
        '400':
          description: "Bad Request"

  /api/ai/code_assistance:
    post:
      summary: "AI-powered code assistance"
      description: "Generative AI assists in debugging code without writing it for the student."
      responses:
        '200':
          description: "AI assistance provided"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  assistance:
                    type: "string"
        '400':
          description: "Bad Request"

  /github/commits:
    get:
      summary: "Fetch latest commits from the GitHub repository"
      description: "Tracks student progress based on their GitHub commit history."
      responses:
        '200':
          description: "GitHub commits retrieved successfully"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    commit_id:
                      type: "string"
                    commit_message:
                      type: "string"
        '404':
          description: "Commits not found"

  /ai/review_code:
    post:
      summary: "Review code quality using generative AI"
      description: "Generative AI evaluates the quality of student code."
      responses:
        '200':
          description: "Code review completed"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  review:
                    type: "string"
        '400':
          description: "Bad Request"
